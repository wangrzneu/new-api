{
  "components": {
    "schemas": {
      "Input": {
        "properties": {
          "duration": {
            "default": 5,
            "description": "The duration of the generated media in seconds.",
            "maximum": 10,
            "minimum": 5,
            "step": 5,
            "type": "integer"
          },
          "flow_shift": {
            "default": 5,
            "description": "The shift value for the timestep schedule for flow matching.",
            "maximum": 10,
            "minimum": 1,
            "step": 0.1,
            "type": "number"
          },
          "guidance_scale": {
            "default": 5,
            "description": "The guidance scale to use for the generation.",
            "maximum": 20,
            "minimum": 0,
            "step": 0.01,
            "type": "number"
          },
          "image": {
            "default": "https://d3gnftk2yhz9lr.wavespeed.ai/media/images/1745147168756911752_14ZWSNLG.jpg",
            "description": "The image for generating the output.",
            "type": "string"
          },
          "negative_prompt": {
            "default": "",
            "description": "The negative prompt for generating the output.",
            "type": "string"
          },
          "num_inference_steps": {
            "default": 30,
            "description": "The number of inference steps to perform.",
            "maximum": 40,
            "minimum": 1,
            "type": "integer"
          },
          "prompt": {
            "default": "The family of three just took a selfie. They lean in together, smiling and relaxed. The daughter holds the phone and shows the screen. All three look at it with interest. They laugh softly, pointing at the photo. Their faces are close, full of warmth. The background is still the same scenic place. Candid, joyful, cinematic style",
            "description": "The prompt for generating the output.",
            "type": "string"
          },
          "seed": {
            "default": -1,
            "description": "The random seed to use for the generation. -1 means a random seed will be used.",
            "type": "integer"
          },
          "size": {
            "default": "1280*720",
            "description": "The size of the generated media in pixels (width*height).",
            "enum": [
              "1280*720",
              "720*1280"
            ],
            "type": "string"
          }
        },
        "required": [
          "prompt",
          "image"
        ],
        "type": "object",
        "x-order-properties": [
          "image",
          "prompt",
          "negative_prompt",
          "size",
          "num_inference_steps",
          "duration",
          "guidance_scale",
          "flow_shift",
          "seed"
        ]
      },
      "LoraWeight": {
        "properties": {
          "path": {
            "description": "URL or the path to the LoRA weights.",
            "type": "string"
          },
          "scale": {
            "default": 1,
            "description": "The scale of the LoRA weights. This is used to scale the LoRA weight before merging it with the base model.",
            "maximum": 4,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "path"
        ],
        "type": "object",
        "x-order-properties": [
          "path",
          "scale"
        ]
      },
      "PredictionResponse": {
        "properties": {
          "created_at": {
            "description": "ISO timestamp of when the request was created (e.g., “2023-04-01T12:34:56.789Z”).",
            "format": "date-time",
            "type": "string"
          },
          "has_nsfw_contents": {
            "description": "Array of boolean values indicating NSFW detection for each output.",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the prediction, the ID of the prediction to get.",
            "type": "string"
          },
          "model": {
            "description": "Model ID used for the prediction.",
            "type": "string"
          },
          "outputs": {
            "description": "Array of URLs to the generated content (empty when status is not completed).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "description": "Status of the task: created, processing, completed, or failed.",
            "type": "string"
          },
          "urls": {
            "description": "Object containing related API endpoints.",
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "description": "The WaveSpeed API.",
    "title": "WaveSpeed API",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/v3/predictions/{request_id}/result": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "request_id",
            "required": true,
            "schema": {
              "description": "Request ID",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            },
            "description": "Result of the request."
          }
        }
      },
      "x-api-name": "model_result"
    },
    "/api/v3/wavespeed-ai/wan-2.1/i2v-720p": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            },
            "description": "The request status."
          }
        }
      },
      "x-api-name": "model_run"
    }
  },
  "servers": [
    {
      "url": "https://api.wavespeed.ai"
    }
  ]
}
